// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 3 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in D:\Users\Bart\VS_Code_Projects\DiscreteKnapsackProblem\bin\Release\net5.0\f8da4de5-1183-4f80-8d3f-4bf9f1051537
// command took 1,08s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in D:\Users\Bart\VS_Code_Projects\DiscreteKnapsackProblem\bin\Release\net5.0\f8da4de5-1183-4f80-8d3f-4bf9f1051537
// command took 1,96s and exited with 0
// ***** Done, took 00:00:03 (3.1 sec)   *****
// Found 3 benchmarks:
//   RecursiveKnapsackSolverBenchmark.GetSolverBenchmark: DefaultJob
//   RecursiveKnapsackSolverBenchmark.GetSolverSecondBenchmark: DefaultJob
//   RecursiveKnapsackSolverBenchmark.GetSolverFromCFGBenchmark: DefaultJob

// **************************
// Benchmark: RecursiveKnapsackSolverBenchmark.GetSolverBenchmark: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "f8da4de5-1183-4f80-8d3f-4bf9f1051537.dll" --benchmarkName "DiscreteKnapsackProblem.RecursiveKnapsackSolverBenchmark.GetSolverBenchmark" --job "Default" --benchmarkId 0 in D:\Users\Bart\VS_Code_Projects\DiscreteKnapsackProblem\bin\Release\net5.0\f8da4de5-1183-4f80-8d3f-4bf9f1051537\bin\Release\netcoreapp5.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 5.0.5 (CoreCLR 5.0.521.16609, CoreFX 5.0.521.16609), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 153500.00 ns, 153.5000 us/op
WorkloadJitting  1: 1 op, 1004373600.00 ns, 1.0044 s/op

WorkloadWarmup   1: 1 op, 949890000.00 ns, 949.8900 ms/op
WorkloadWarmup   2: 1 op, 955874900.00 ns, 955.8749 ms/op
WorkloadWarmup   3: 1 op, 956922400.00 ns, 956.9224 ms/op
WorkloadWarmup   4: 1 op, 959063000.00 ns, 959.0630 ms/op
WorkloadWarmup   5: 1 op, 962989400.00 ns, 962.9894 ms/op
WorkloadWarmup   6: 1 op, 954640200.00 ns, 954.6402 ms/op
WorkloadWarmup   7: 1 op, 956631100.00 ns, 956.6311 ms/op
WorkloadWarmup   8: 1 op, 960118200.00 ns, 960.1182 ms/op
WorkloadWarmup   9: 1 op, 922668300.00 ns, 922.6683 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 919965300.00 ns, 919.9653 ms/op
WorkloadActual   2: 1 op, 914054300.00 ns, 914.0543 ms/op
WorkloadActual   3: 1 op, 943717800.00 ns, 943.7178 ms/op
WorkloadActual   4: 1 op, 933241100.00 ns, 933.2411 ms/op
WorkloadActual   5: 1 op, 923932500.00 ns, 923.9325 ms/op
WorkloadActual   6: 1 op, 920505900.00 ns, 920.5059 ms/op
WorkloadActual   7: 1 op, 923534600.00 ns, 923.5346 ms/op
WorkloadActual   8: 1 op, 920291800.00 ns, 920.2918 ms/op
WorkloadActual   9: 1 op, 931352200.00 ns, 931.3522 ms/op
WorkloadActual  10: 1 op, 927311300.00 ns, 927.3113 ms/op
WorkloadActual  11: 1 op, 918706900.00 ns, 918.7069 ms/op
WorkloadActual  12: 1 op, 918989200.00 ns, 918.9892 ms/op
WorkloadActual  13: 1 op, 920374900.00 ns, 920.3749 ms/op
WorkloadActual  14: 1 op, 917319700.00 ns, 917.3197 ms/op
WorkloadActual  15: 1 op, 915880900.00 ns, 915.8809 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 919965300.00 ns, 919.9653 ms/op
WorkloadResult   2: 1 op, 914054300.00 ns, 914.0543 ms/op
WorkloadResult   3: 1 op, 933241100.00 ns, 933.2411 ms/op
WorkloadResult   4: 1 op, 923932500.00 ns, 923.9325 ms/op
WorkloadResult   5: 1 op, 920505900.00 ns, 920.5059 ms/op
WorkloadResult   6: 1 op, 923534600.00 ns, 923.5346 ms/op
WorkloadResult   7: 1 op, 920291800.00 ns, 920.2918 ms/op
WorkloadResult   8: 1 op, 931352200.00 ns, 931.3522 ms/op
WorkloadResult   9: 1 op, 927311300.00 ns, 927.3113 ms/op
WorkloadResult  10: 1 op, 918706900.00 ns, 918.7069 ms/op
WorkloadResult  11: 1 op, 918989200.00 ns, 918.9892 ms/op
WorkloadResult  12: 1 op, 920374900.00 ns, 920.3749 ms/op
WorkloadResult  13: 1 op, 917319700.00 ns, 917.3197 ms/op
WorkloadResult  14: 1 op, 915880900.00 ns, 915.8809 ms/op
GC:  0 0 0 1632 1
Threading:  2 0 1

// AfterAll
// Benchmark Process 68688 has exited with code 0

Mean = 921.819 ms, StdErr = 1.486 ms (0.16%), N = 14, StdDev = 5.561 ms
Min = 914.054 ms, Q1 = 918.777 ms, Median = 920.333 ms, Q3 = 923.833 ms, Max = 933.241 ms
IQR = 5.056 ms, LowerFence = 911.194 ms, UpperFence = 931.416 ms
ConfidenceInterval = [915.546 ms; 928.092 ms] (CI 99.9%), Margin = 6.273 ms (0.68% of Mean)
Skewness = 0.71, Kurtosis = 2.37, MValue = 2

// **************************
// Benchmark: RecursiveKnapsackSolverBenchmark.GetSolverSecondBenchmark: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "f8da4de5-1183-4f80-8d3f-4bf9f1051537.dll" --benchmarkName "DiscreteKnapsackProblem.RecursiveKnapsackSolverBenchmark.GetSolverSecondBenchmark" --job "Default" --benchmarkId 1 in D:\Users\Bart\VS_Code_Projects\DiscreteKnapsackProblem\bin\Release\net5.0\f8da4de5-1183-4f80-8d3f-4bf9f1051537\bin\Release\netcoreapp5.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 5.0.5 (CoreCLR 5.0.521.16609, CoreFX 5.0.521.16609), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 135400.00 ns, 135.4000 us/op
WorkloadJitting  1: 1 op, 616641700.00 ns, 616.6417 ms/op

WorkloadWarmup   1: 1 op, 552038300.00 ns, 552.0383 ms/op
WorkloadWarmup   2: 1 op, 549103800.00 ns, 549.1038 ms/op
WorkloadWarmup   3: 1 op, 549892800.00 ns, 549.8928 ms/op
WorkloadWarmup   4: 1 op, 549923200.00 ns, 549.9232 ms/op
WorkloadWarmup   5: 1 op, 552785000.00 ns, 552.7850 ms/op
WorkloadWarmup   6: 1 op, 556578200.00 ns, 556.5782 ms/op
WorkloadWarmup   7: 1 op, 548619800.00 ns, 548.6198 ms/op
WorkloadWarmup   8: 1 op, 550738300.00 ns, 550.7383 ms/op
WorkloadWarmup   9: 1 op, 550331100.00 ns, 550.3311 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 561090900.00 ns, 561.0909 ms/op
WorkloadActual   2: 1 op, 549612200.00 ns, 549.6122 ms/op
WorkloadActual   3: 1 op, 550701600.00 ns, 550.7016 ms/op
WorkloadActual   4: 1 op, 548252900.00 ns, 548.2529 ms/op
WorkloadActual   5: 1 op, 552256500.00 ns, 552.2565 ms/op
WorkloadActual   6: 1 op, 554805700.00 ns, 554.8057 ms/op
WorkloadActual   7: 1 op, 550373800.00 ns, 550.3738 ms/op
WorkloadActual   8: 1 op, 551171800.00 ns, 551.1718 ms/op
WorkloadActual   9: 1 op, 548000200.00 ns, 548.0002 ms/op
WorkloadActual  10: 1 op, 549587000.00 ns, 549.5870 ms/op
WorkloadActual  11: 1 op, 549432000.00 ns, 549.4320 ms/op
WorkloadActual  12: 1 op, 552804900.00 ns, 552.8049 ms/op
WorkloadActual  13: 1 op, 549327000.00 ns, 549.3270 ms/op
WorkloadActual  14: 1 op, 550743300.00 ns, 550.7433 ms/op
WorkloadActual  15: 1 op, 555467100.00 ns, 555.4671 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 549612200.00 ns, 549.6122 ms/op
WorkloadResult   2: 1 op, 550701600.00 ns, 550.7016 ms/op
WorkloadResult   3: 1 op, 548252900.00 ns, 548.2529 ms/op
WorkloadResult   4: 1 op, 552256500.00 ns, 552.2565 ms/op
WorkloadResult   5: 1 op, 554805700.00 ns, 554.8057 ms/op
WorkloadResult   6: 1 op, 550373800.00 ns, 550.3738 ms/op
WorkloadResult   7: 1 op, 551171800.00 ns, 551.1718 ms/op
WorkloadResult   8: 1 op, 548000200.00 ns, 548.0002 ms/op
WorkloadResult   9: 1 op, 549587000.00 ns, 549.5870 ms/op
WorkloadResult  10: 1 op, 549432000.00 ns, 549.4320 ms/op
WorkloadResult  11: 1 op, 552804900.00 ns, 552.8049 ms/op
WorkloadResult  12: 1 op, 549327000.00 ns, 549.3270 ms/op
WorkloadResult  13: 1 op, 550743300.00 ns, 550.7433 ms/op
WorkloadResult  14: 1 op, 555467100.00 ns, 555.4671 ms/op
GC:  0 0 0 1632 1
Threading:  2 0 1

// AfterAll
// Benchmark Process 67440 has exited with code 0

Mean = 550.895 ms, StdErr = 0.600 ms (0.11%), N = 14, StdDev = 2.243 ms
Min = 548.000 ms, Q1 = 549.471 ms, Median = 550.538 ms, Q3 = 551.985 ms, Max = 555.467 ms
IQR = 2.515 ms, LowerFence = 545.699 ms, UpperFence = 555.757 ms
ConfidenceInterval = [548.365 ms; 553.426 ms] (CI 99.9%), Margin = 2.531 ms (0.46% of Mean)
Skewness = 0.7, Kurtosis = 2.32, MValue = 2

// **************************
// Benchmark: RecursiveKnapsackSolverBenchmark.GetSolverFromCFGBenchmark: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "f8da4de5-1183-4f80-8d3f-4bf9f1051537.dll" --benchmarkName "DiscreteKnapsackProblem.RecursiveKnapsackSolverBenchmark.GetSolverFromCFGBenchmark" --job "Default" --benchmarkId 2 in D:\Users\Bart\VS_Code_Projects\DiscreteKnapsackProblem\bin\Release\net5.0\f8da4de5-1183-4f80-8d3f-4bf9f1051537\bin\Release\netcoreapp5.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 5.0.5 (CoreCLR 5.0.521.16609, CoreFX 5.0.521.16609), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 144100.00 ns, 144.1000 us/op
WorkloadJitting  1: 1 op, 472189100.00 ns, 472.1891 ms/op

WorkloadWarmup   1: 1 op, 367762000.00 ns, 367.7620 ms/op
WorkloadWarmup   2: 1 op, 366457300.00 ns, 366.4573 ms/op
WorkloadWarmup   3: 1 op, 368492700.00 ns, 368.4927 ms/op
WorkloadWarmup   4: 1 op, 367199200.00 ns, 367.1992 ms/op
WorkloadWarmup   5: 1 op, 366996900.00 ns, 366.9969 ms/op
WorkloadWarmup   6: 1 op, 366043400.00 ns, 366.0434 ms/op
WorkloadWarmup   7: 1 op, 370501300.00 ns, 370.5013 ms/op
WorkloadWarmup   8: 1 op, 368767600.00 ns, 368.7676 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 367433200.00 ns, 367.4332 ms/op
WorkloadActual   2: 1 op, 370345200.00 ns, 370.3452 ms/op
WorkloadActual   3: 1 op, 368396900.00 ns, 368.3969 ms/op
WorkloadActual   4: 1 op, 366863100.00 ns, 366.8631 ms/op
WorkloadActual   5: 1 op, 372142200.00 ns, 372.1422 ms/op
WorkloadActual   6: 1 op, 367781900.00 ns, 367.7819 ms/op
WorkloadActual   7: 1 op, 365451200.00 ns, 365.4512 ms/op
WorkloadActual   8: 1 op, 370731900.00 ns, 370.7319 ms/op
WorkloadActual   9: 1 op, 367093700.00 ns, 367.0937 ms/op
WorkloadActual  10: 1 op, 367814900.00 ns, 367.8149 ms/op
WorkloadActual  11: 1 op, 367360400.00 ns, 367.3604 ms/op
WorkloadActual  12: 1 op, 368211600.00 ns, 368.2116 ms/op
WorkloadActual  13: 1 op, 369217000.00 ns, 369.2170 ms/op
WorkloadActual  14: 1 op, 370612900.00 ns, 370.6129 ms/op
WorkloadActual  15: 1 op, 370531800.00 ns, 370.5318 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 367433200.00 ns, 367.4332 ms/op
WorkloadResult   2: 1 op, 370345200.00 ns, 370.3452 ms/op
WorkloadResult   3: 1 op, 368396900.00 ns, 368.3969 ms/op
WorkloadResult   4: 1 op, 366863100.00 ns, 366.8631 ms/op
WorkloadResult   5: 1 op, 372142200.00 ns, 372.1422 ms/op
WorkloadResult   6: 1 op, 367781900.00 ns, 367.7819 ms/op
WorkloadResult   7: 1 op, 365451200.00 ns, 365.4512 ms/op
WorkloadResult   8: 1 op, 370731900.00 ns, 370.7319 ms/op
WorkloadResult   9: 1 op, 367093700.00 ns, 367.0937 ms/op
WorkloadResult  10: 1 op, 367814900.00 ns, 367.8149 ms/op
WorkloadResult  11: 1 op, 367360400.00 ns, 367.3604 ms/op
WorkloadResult  12: 1 op, 368211600.00 ns, 368.2116 ms/op
WorkloadResult  13: 1 op, 369217000.00 ns, 369.2170 ms/op
WorkloadResult  14: 1 op, 370612900.00 ns, 370.6129 ms/op
WorkloadResult  15: 1 op, 370531800.00 ns, 370.5318 ms/op
GC:  0 0 0 288 1
Threading:  2 0 1

// AfterAll
// Benchmark Process 63320 has exited with code 0

Mean = 368.666 ms, StdErr = 0.477 ms (0.13%), N = 15, StdDev = 1.848 ms
Min = 365.451 ms, Q1 = 367.397 ms, Median = 368.212 ms, Q3 = 370.438 ms, Max = 372.142 ms
IQR = 3.042 ms, LowerFence = 362.834 ms, UpperFence = 375.001 ms
ConfidenceInterval = [366.690 ms; 370.642 ms] (CI 99.9%), Margin = 1.976 ms (0.54% of Mean)
Skewness = 0.22, Kurtosis = 1.88, MValue = 2

// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\DiscreteKnapsackProblem.RecursiveKnapsackSolverBenchmark-report.csv
  BenchmarkDotNet.Artifacts\results\DiscreteKnapsackProblem.RecursiveKnapsackSolverBenchmark-report-github.md
  BenchmarkDotNet.Artifacts\results\DiscreteKnapsackProblem.RecursiveKnapsackSolverBenchmark-report.html

// * Detailed results *
RecursiveKnapsackSolverBenchmark.GetSolverBenchmark: DefaultJob
Runtime = .NET Core 5.0.5 (CoreCLR 5.0.521.16609, CoreFX 5.0.521.16609), X64 RyuJIT; GC = Concurrent Workstation
Mean = 921.819 ms, StdErr = 1.486 ms (0.16%), N = 14, StdDev = 5.561 ms
Min = 914.054 ms, Q1 = 918.777 ms, Median = 920.333 ms, Q3 = 923.833 ms, Max = 933.241 ms
IQR = 5.056 ms, LowerFence = 911.194 ms, UpperFence = 931.416 ms
ConfidenceInterval = [915.546 ms; 928.092 ms] (CI 99.9%), Margin = 6.273 ms (0.68% of Mean)
Skewness = 0.71, Kurtosis = 2.37, MValue = 2
-------------------- Histogram --------------------
[911.026 ms ; 936.269 ms) | @@@@@@@@@@@@@@
---------------------------------------------------

RecursiveKnapsackSolverBenchmark.GetSolverSecondBenchmark: DefaultJob
Runtime = .NET Core 5.0.5 (CoreCLR 5.0.521.16609, CoreFX 5.0.521.16609), X64 RyuJIT; GC = Concurrent Workstation
Mean = 550.895 ms, StdErr = 0.600 ms (0.11%), N = 14, StdDev = 2.243 ms
Min = 548.000 ms, Q1 = 549.471 ms, Median = 550.538 ms, Q3 = 551.985 ms, Max = 555.467 ms
IQR = 2.515 ms, LowerFence = 545.699 ms, UpperFence = 555.757 ms
ConfidenceInterval = [548.365 ms; 553.426 ms] (CI 99.9%), Margin = 2.531 ms (0.46% of Mean)
Skewness = 0.7, Kurtosis = 2.32, MValue = 2
-------------------- Histogram --------------------
[546.779 ms ; 556.689 ms) | @@@@@@@@@@@@@@
---------------------------------------------------

RecursiveKnapsackSolverBenchmark.GetSolverFromCFGBenchmark: DefaultJob
Runtime = .NET Core 5.0.5 (CoreCLR 5.0.521.16609, CoreFX 5.0.521.16609), X64 RyuJIT; GC = Concurrent Workstation
Mean = 368.666 ms, StdErr = 0.477 ms (0.13%), N = 15, StdDev = 1.848 ms
Min = 365.451 ms, Q1 = 367.397 ms, Median = 368.212 ms, Q3 = 370.438 ms, Max = 372.142 ms
IQR = 3.042 ms, LowerFence = 362.834 ms, UpperFence = 375.001 ms
ConfidenceInterval = [366.690 ms; 370.642 ms] (CI 99.9%), Margin = 1.976 ms (0.54% of Mean)
Skewness = 0.22, Kurtosis = 1.88, MValue = 2
-------------------- Histogram --------------------
[364.468 ms ; 373.126 ms) | @@@@@@@@@@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.12.1, OS=Windows 10.0.19042
Intel Core i7-9700K CPU 3.60GHz (Coffee Lake), 1 CPU, 8 logical and 8 physical cores
.NET Core SDK=5.0.104
  [Host]     : .NET Core 5.0.5 (CoreCLR 5.0.521.16609, CoreFX 5.0.521.16609), X64 RyuJIT
  DefaultJob : .NET Core 5.0.5 (CoreCLR 5.0.521.16609, CoreFX 5.0.521.16609), X64 RyuJIT


|                    Method |     Mean |   Error |  StdDev | Rank | Gen 0 | Gen 1 | Gen 2 | Allocated |
|-------------------------- |---------:|--------:|--------:|-----:|------:|------:|------:|----------:|
|        GetSolverBenchmark | 921.8 ms | 6.27 ms | 5.56 ms |    3 |     - |     - |     - |    1632 B |
|  GetSolverSecondBenchmark | 550.9 ms | 2.53 ms | 2.24 ms |    2 |     - |     - |     - |    1632 B |
| GetSolverFromCFGBenchmark | 368.7 ms | 1.98 ms | 1.85 ms |    1 |     - |     - |     - |     288 B |

// * Hints *
Outliers
  RecursiveKnapsackSolverBenchmark.GetSolverBenchmark: Default       -> 1 outlier  was  removed (943.72 ms)
  RecursiveKnapsackSolverBenchmark.GetSolverSecondBenchmark: Default -> 1 outlier  was  removed (561.09 ms)

// * Legends *
  Mean      : Arithmetic mean of all measurements
  Error     : Half of 99.9% confidence interval
  StdDev    : Standard deviation of all measurements
  Rank      : Relative position of current benchmark mean among all benchmarks (Arabic style)
  Gen 0     : GC Generation 0 collects per 1000 operations
  Gen 1     : GC Generation 1 collects per 1000 operations
  Gen 2     : GC Generation 2 collects per 1000 operations
  Allocated : Allocated memory per single operation (managed only, inclusive, 1KB = 1024B)
  1 ms      : 1 Millisecond (0.001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:00:49 (49.74 sec), executed benchmarks: 3

Global total time: 00:00:52 (52.85 sec), executed benchmarks: 3
// * Artifacts cleanup *
