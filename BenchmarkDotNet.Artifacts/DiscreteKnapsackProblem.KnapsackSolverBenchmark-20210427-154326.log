// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 1 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in D:\Users\Bart\VS_Code_Projects\DiscreteKnapsackProblem\bin\Release\net5.0\e1337269-540f-4c78-90c3-6fa260cfafed
// command took 1,03s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in D:\Users\Bart\VS_Code_Projects\DiscreteKnapsackProblem\bin\Release\net5.0\e1337269-540f-4c78-90c3-6fa260cfafed
// command took 1,85s and exited with 0
// ***** Done, took 00:00:02 (2.94 sec)   *****
// Found 1 benchmarks:
//   KnapsackSolverBenchmark.GetSolverBenchmark: DefaultJob

// **************************
// Benchmark: KnapsackSolverBenchmark.GetSolverBenchmark: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "e1337269-540f-4c78-90c3-6fa260cfafed.dll" --benchmarkName "DiscreteKnapsackProblem.KnapsackSolverBenchmark.GetSolverBenchmark" --job "Default" --benchmarkId 0 in D:\Users\Bart\VS_Code_Projects\DiscreteKnapsackProblem\bin\Release\net5.0\e1337269-540f-4c78-90c3-6fa260cfafed\bin\Release\netcoreapp5.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 5.0.5 (CoreCLR 5.0.521.16609, CoreFX 5.0.521.16609), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 156300.00 ns, 156.3000 us/op
WorkloadJitting  1: 1 op, 514568400.00 ns, 514.5684 ms/op

WorkloadWarmup   1: 1 op, 465710100.00 ns, 465.7101 ms/op
WorkloadWarmup   2: 1 op, 462846000.00 ns, 462.8460 ms/op
WorkloadWarmup   3: 1 op, 463686900.00 ns, 463.6869 ms/op
WorkloadWarmup   4: 1 op, 471347400.00 ns, 471.3474 ms/op
WorkloadWarmup   5: 1 op, 469317400.00 ns, 469.3174 ms/op
WorkloadWarmup   6: 1 op, 470676800.00 ns, 470.6768 ms/op
WorkloadWarmup   7: 1 op, 469657100.00 ns, 469.6571 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 464869700.00 ns, 464.8697 ms/op
WorkloadActual   2: 1 op, 464027000.00 ns, 464.0270 ms/op
WorkloadActual   3: 1 op, 469045800.00 ns, 469.0458 ms/op
WorkloadActual   4: 1 op, 462328800.00 ns, 462.3288 ms/op
WorkloadActual   5: 1 op, 470637800.00 ns, 470.6378 ms/op
WorkloadActual   6: 1 op, 461871600.00 ns, 461.8716 ms/op
WorkloadActual   7: 1 op, 465538000.00 ns, 465.5380 ms/op
WorkloadActual   8: 1 op, 457315200.00 ns, 457.3152 ms/op
WorkloadActual   9: 1 op, 451438900.00 ns, 451.4389 ms/op
WorkloadActual  10: 1 op, 464102000.00 ns, 464.1020 ms/op
WorkloadActual  11: 1 op, 451645000.00 ns, 451.6450 ms/op
WorkloadActual  12: 1 op, 450246500.00 ns, 450.2465 ms/op
WorkloadActual  13: 1 op, 456518300.00 ns, 456.5183 ms/op
WorkloadActual  14: 1 op, 452287800.00 ns, 452.2878 ms/op
WorkloadActual  15: 1 op, 462046700.00 ns, 462.0467 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 464869700.00 ns, 464.8697 ms/op
WorkloadResult   2: 1 op, 464027000.00 ns, 464.0270 ms/op
WorkloadResult   3: 1 op, 469045800.00 ns, 469.0458 ms/op
WorkloadResult   4: 1 op, 462328800.00 ns, 462.3288 ms/op
WorkloadResult   5: 1 op, 470637800.00 ns, 470.6378 ms/op
WorkloadResult   6: 1 op, 461871600.00 ns, 461.8716 ms/op
WorkloadResult   7: 1 op, 465538000.00 ns, 465.5380 ms/op
WorkloadResult   8: 1 op, 457315200.00 ns, 457.3152 ms/op
WorkloadResult   9: 1 op, 451438900.00 ns, 451.4389 ms/op
WorkloadResult  10: 1 op, 464102000.00 ns, 464.1020 ms/op
WorkloadResult  11: 1 op, 451645000.00 ns, 451.6450 ms/op
WorkloadResult  12: 1 op, 450246500.00 ns, 450.2465 ms/op
WorkloadResult  13: 1 op, 456518300.00 ns, 456.5183 ms/op
WorkloadResult  14: 1 op, 452287800.00 ns, 452.2878 ms/op
WorkloadResult  15: 1 op, 462046700.00 ns, 462.0467 ms/op
GC:  0 0 0 288 1
Threading:  2 0 1

// AfterAll
// Benchmark Process 72576 has exited with code 0

Mean = 460.261 ms, StdErr = 1.706 ms (0.37%), N = 15, StdDev = 6.609 ms
Min = 450.247 ms, Q1 = 454.403 ms, Median = 462.047 ms, Q3 = 464.486 ms, Max = 470.638 ms
IQR = 10.083 ms, LowerFence = 439.279 ms, UpperFence = 479.610 ms
ConfidenceInterval = [453.196 ms; 467.327 ms] (CI 99.9%), Margin = 7.066 ms (1.54% of Mean)
Skewness = -0.17, Kurtosis = 1.58, MValue = 2

// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\DiscreteKnapsackProblem.KnapsackSolverBenchmark-report.csv
  BenchmarkDotNet.Artifacts\results\DiscreteKnapsackProblem.KnapsackSolverBenchmark-report-github.md
  BenchmarkDotNet.Artifacts\results\DiscreteKnapsackProblem.KnapsackSolverBenchmark-report.html

// * Detailed results *
KnapsackSolverBenchmark.GetSolverBenchmark: DefaultJob
Runtime = .NET Core 5.0.5 (CoreCLR 5.0.521.16609, CoreFX 5.0.521.16609), X64 RyuJIT; GC = Concurrent Workstation
Mean = 460.261 ms, StdErr = 1.706 ms (0.37%), N = 15, StdDev = 6.609 ms
Min = 450.247 ms, Q1 = 454.403 ms, Median = 462.047 ms, Q3 = 464.486 ms, Max = 470.638 ms
IQR = 10.083 ms, LowerFence = 439.279 ms, UpperFence = 479.610 ms
ConfidenceInterval = [453.196 ms; 467.327 ms] (CI 99.9%), Margin = 7.066 ms (1.54% of Mean)
Skewness = -0.17, Kurtosis = 1.58, MValue = 2
-------------------- Histogram --------------------
[449.833 ms ; 459.068 ms) | @@@@@@
[459.068 ms ; 474.155 ms) | @@@@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.12.1, OS=Windows 10.0.19042
Intel Core i7-9700K CPU 3.60GHz (Coffee Lake), 1 CPU, 8 logical and 8 physical cores
.NET Core SDK=5.0.104
  [Host]     : .NET Core 5.0.5 (CoreCLR 5.0.521.16609, CoreFX 5.0.521.16609), X64 RyuJIT
  DefaultJob : .NET Core 5.0.5 (CoreCLR 5.0.521.16609, CoreFX 5.0.521.16609), X64 RyuJIT


|             Method |     Mean |   Error |  StdDev | Rank | Gen 0 | Gen 1 | Gen 2 | Allocated |
|------------------- |---------:|--------:|--------:|-----:|------:|------:|------:|----------:|
| GetSolverBenchmark | 460.3 ms | 7.07 ms | 6.61 ms |    1 |     - |     - |     - |     288 B |

// * Legends *
  Mean      : Arithmetic mean of all measurements
  Error     : Half of 99.9% confidence interval
  StdDev    : Standard deviation of all measurements
  Rank      : Relative position of current benchmark mean among all benchmarks (Arabic style)
  Gen 0     : GC Generation 0 collects per 1000 operations
  Gen 1     : GC Generation 1 collects per 1000 operations
  Gen 2     : GC Generation 2 collects per 1000 operations
  Allocated : Allocated memory per single operation (managed only, inclusive, 1KB = 1024B)
  1 ms      : 1 Millisecond (0.001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:00:12 (12.09 sec), executed benchmarks: 1

Global total time: 00:00:15 (15.04 sec), executed benchmarks: 1
// * Artifacts cleanup *
